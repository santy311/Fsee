{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 12, "column": 0}, "map": {"version":3,"sources":["file:///Users/santhosh/Documents/Turbin3/f4see/app/src/app/utils/ProgramUtils.ts"],"sourcesContent":["import { Program, AnchorProvider, Idl, setProvider, BN } from \"@coral-xyz/anchor\";\nimport {\n  PublicKey,\n  Connection,\n  Keypair,\n  ConfirmOptions,\n  TransactionMessage,\n  VersionedTransaction,\n  Transaction,\n  TransactionInstruction,\n} from \"@solana/web3.js\";\n\nimport idl from \"../solana/idl/fsee.json\";\nimport { Fsee } from \"../solana/types/fsee\";\nimport { getAccount, getAssociatedTokenAddressSync, createAssociatedTokenAccountInstruction, TokenAccountNotFoundError, TokenInvalidAccountOwnerError } from '@solana/spl-token';\nimport { useConnection, useWallet } from '@solana/wallet-adapter-react';\n\nexport const CONFIRM_OPTIONS: ConfirmOptions = { commitment: \"finalized\" };\n\n// Types\nexport interface Market {\n  creator: PublicKey;\n  title: string;\n  desc: string;\n  icon: string;\n  seed: number;\n  publicKey: PublicKey;\n  resolved: boolean;\n  outcome: boolean | null;\n  liquidity: number;\n  yesAmount: number;\n  noAmount: number;\n  userYesBalance?: number;\n  userNoBalance?: number;\n  userLpBalance?: number;\n}\n\ninterface PriceResult {\n  priceA: number;\n  priceB: number;\n  priceABigInt: bigint;\n  priceBBigInt: bigint;\n}\n\nexport class ProgramUtils {\n  private program: Program<Fsee>;\n  private provider: AnchorProvider;\n  private readonly PRECISION = BigInt(10000);\n\n  constructor(connection: Connection, wallet: any) {\n    this.provider = new AnchorProvider(\n      connection,\n      wallet,\n      AnchorProvider.defaultOptions()\n    );\n    setProvider(this.provider);\n\n    const programId = new PublicKey(idl.address);\n    console.log(\"Program ID from IDL:\", programId.toString());\n\n    this.program = new Program(idl as Idl, this.provider) as unknown as Program<Fsee>;\n\n  }\n\n  async initializeMarket(\n    seed: number,\n    title: string,\n    description: string,\n    icon: string,\n  ): Promise<PublicKey> {\n    try {\n\n      const descriptionJSON = {\n        title: title,\n        desc: description,\n        icon: icon,\n      }\n      const descriptionString = JSON.stringify(descriptionJSON);\n\n      const seed_bn = new BN(seed);\n\n      const market = PublicKey.findProgramAddressSync(\n        [\n          Buffer.from(\"market\"),\n          this.provider.wallet.publicKey.toBuffer(),\n          Buffer.from(seed_bn.toArrayLike(Buffer, \"le\", 8)),\n        ],\n        new PublicKey(idl.address)\n      )[0];\n\n      const transaction = new Transaction();\n\n      const tx_ix1 = await this.program.methods\n        .initializeMarket(\n          seed_bn,\n          descriptionString,\n        )\n        .accounts({\n          creator: this.provider.wallet.publicKey,\n          usdcMint: new PublicKey(process.env.NEXT_PUBLIC_USDC_MINT!),\n        })\n        .instruction();\n\n      const tx_ix2 = await this.program.methods\n        .initializeNoMints()\n        .accountsPartial({\n          creator: this.provider.wallet.publicKey,\n          market: market,\n        })\n        .instruction();\n\n      const tx_ix3 = await this.program.methods\n        .initializeYesMints()\n        .accountsPartial({\n          creator: this.provider.wallet.publicKey,\n          market: market,\n        })\n        .instruction();\n\n      transaction.add(tx_ix1, tx_ix2, tx_ix3);\n\n      const hash = await this.provider.sendAll([{tx: transaction}], {commitment: \"finalized\"});\n\n      console.log(\"Transaction hash:\", hash);\n\n      console.log(\"Market created with address:\", market.toBase58());\n\n      console.log(\"market\", await this.getMarket(market));\n\n\n      return market;\n    } catch (error) {\n      console.error(\"Error in initializeMarket:\", error);\n      throw error;\n    }\n  }\n\n  async addLiquidity(market: PublicKey, amount: number): Promise<string> {\n    console.log(\"Adding liquidity to market:\", market.toBase58());\n    console.log(\"Amount:\", amount);\n    console.log(\"user\", this.provider.wallet.publicKey);\n    const ata_ixs = await this.createATAs(market, this.provider.wallet.publicKey);\n    console.log(\"ata_ixs\", ata_ixs);\n    const ix = await this.program.methods\n    .addLiquidity(new BN(amount))\n    .accountsPartial({\n        liquidityProvider: this.provider.wallet.publicKey,\n        usdcMint: new PublicKey(process.env.NEXT_PUBLIC_USDC_MINT!),\n        market: market,\n    })\n    .instruction();\n\n    const latestBlockhash = await this.provider.connection.getLatestBlockhash()\n\n    // Create a new TransactionMessage with version and compile it to version 0\n    const messageV0 = new TransactionMessage({\n        payerKey: this.provider.wallet.publicKey,\n        recentBlockhash: latestBlockhash.blockhash,\n        instructions: [...ata_ixs, ix],\n    }).compileToV0Message();\n\n    // Create a new VersionedTransacction to support the v0 message\n    const transaction = new VersionedTransaction(messageV0)\n\n    // Send transaction and await for signature\n    const signature = await this.provider.sendAll([{tx: transaction}], CONFIRM_OPTIONS);\n\n    console.log(\"Signature:\", signature);\n\n    return signature[0];\n  }\n\n  async buy(\n    market: PublicKey,\n    buyingYes: boolean,\n    amount: number\n  ): Promise<string> {\n    const tx = await this.program.methods\n    .buy(buyingYes, new BN(amount))\n    .accountsPartial({\n        predictor: this.provider.wallet.publicKey,\n        usdcMint: new PublicKey(process.env.NEXT_PUBLIC_USDC_MINT!),\n        market: market,\n    })\n    .rpc(CONFIRM_OPTIONS);\n    console.log(\"tx\", tx);\n\n    return tx;\n  }\n\n  async resolveMarket(market: PublicKey, outcome: boolean): Promise<string> {\n    const tx = await this.program.methods\n    .resolveMarket(outcome)\n    .accountsPartial({\n        predictor: this.provider.wallet.publicKey,\n        market: market,\n    })\n    .rpc(CONFIRM_OPTIONS);\n    console.log(\"tx\", tx);\n\n    return tx;\n  }\n\n  async redeemTokens(\n    market: PublicKey,\n    yesAmount: number,\n    noAmount: number\n  ): Promise<string> {\n    const tx = await this.program.methods\n    .redeemTokens(new BN(yesAmount), new BN(noAmount))\n    .accountsPartial({\n        predictor: this.provider.wallet.publicKey,\n        usdcMint: new PublicKey(process.env.NEXT_PUBLIC_USDC_MINT!),\n        market: market,\n    })\n    .rpc(CONFIRM_OPTIONS);\n    console.log(\"tx\", tx);\n\n    return tx;\n  }\n\n  async removeLiquidity(market: PublicKey, amount: number): Promise<string> {\n    const tx = await this.program.methods\n    .removeLiquidity(new BN(amount))\n    .accountsPartial({\n        liquidityProvider: this.provider.wallet.publicKey,\n        usdcMint: new PublicKey(process.env.NEXT_PUBLIC_USDC_MINT!),\n        market: market,\n    })\n    .rpc(CONFIRM_OPTIONS);\n    console.log(\"tx\", tx);\n\n    return tx;\n  }\n\n  private async createATAs(market: PublicKey, user: PublicKey): Promise<TransactionInstruction[]> {\n    const marketAccount = await this.program.account.market.fetch(market);\n    const yes_ix = await this.createTokenAccountInstruction(market, user, marketAccount.yesMint);\n    const no_ix = await this.createTokenAccountInstruction(market, user, marketAccount.noMint);\n    const lp_ix = await this.createTokenAccountInstruction(market, user, marketAccount.lpMint);\n    const ixs = [yes_ix, no_ix, lp_ix];\n    // Filter out null instructions and match the return type\n    return ixs.filter((ix) => ix !== null) as TransactionInstruction[];\n  }\n\n  private async getAtas(market: PublicKey, user: PublicKey): Promise<[PublicKey, PublicKey, PublicKey, PublicKey]> {\n    const marketAccount = await this.program.account.market.fetch(market);\n    const yesAta = await getAssociatedTokenAddressSync(marketAccount.yesMint, user, true);\n    const noAta = await getAssociatedTokenAddressSync(marketAccount.noMint, user, true);\n    const lpAta = await getAssociatedTokenAddressSync(marketAccount.lpMint, user, true);\n    const usdcAta = await getAssociatedTokenAddressSync(new PublicKey(process.env.NEXT_PUBLIC_USDC_MINT!), user, true);\n    return [yesAta, noAta, lpAta, usdcAta];\n  }\n\n  private async createTokenAccountInstruction(market: PublicKey, user: PublicKey, mint: PublicKey): Promise<TransactionInstruction | null> {\n    const associatedToken = await getAssociatedTokenAddressSync(\n        mint,\n        user,\n    );\n    \n    let account;\n    try {\n        account = await getAccount(this.provider.connection, associatedToken);\n        return null;\n    } catch (error: unknown) {\n      if (error instanceof TokenAccountNotFoundError || error instanceof TokenInvalidAccountOwnerError) {\n        try {\n            const ix = createAssociatedTokenAccountInstruction(\n                        user,\n                        associatedToken,\n                        user,\n                        mint,\n                    );\n\n            return ix;\n        } catch (error: unknown) {\n            throw error;\n        }\n      } else {\n        throw error;\n      }\n    }\n    return account;\n  }\n\n  public async getMarkets(): Promise<Market[]> {\n    const markets = await this.program.account.market.all();\n    const market_pdas = await Promise.all(markets.map((market) => market.publicKey));\n    const markets_with_data = await Promise.all(market_pdas.map((market) => this.getMarket(market)));\n    return markets_with_data.filter((market) => market !== null);\n  }\n\n  public async getPrice(\n        market: PublicKey, \n    ): Promise<PriceResult> {\n        const market_account = await this.program.account.market.fetch(market);\n        \n        const market_yes_ata = await getAssociatedTokenAddressSync(market_account.yesMint, market, true);\n        const market_no_ata = await getAssociatedTokenAddressSync(market_account.noMint, market, true);\n        const yes_pool_balance = BigInt((await this.provider.connection.getTokenAccountBalance(market_yes_ata)).value.amount);\n        const no_pool_balance = BigInt((await this.provider.connection.getTokenAccountBalance(market_no_ata)).value.amount);\n        const prices = await this.calculateOutcomeShares(yes_pool_balance, no_pool_balance);\n        return prices;\n    }\n\n    private async calculateOutcomeShares(\n        yes_pool_balance: bigint, \n        no_pool_balance: bigint, \n    ): Promise<PriceResult> {\n        // Input validation\n        if (yes_pool_balance <= BigInt(0) || no_pool_balance <= BigInt(0)) {\n            if (yes_pool_balance == BigInt(0) && no_pool_balance == BigInt(0)) {\n                return {\n                    priceA: 0.5,\n                    priceB: 0.5,\n                    priceABigInt: BigInt(5000),\n                    priceBBigInt: BigInt(5000)\n                };\n            } else if (yes_pool_balance == BigInt(0)) {\n                return {\n                    priceA: 0,\n                    priceB: 1,\n                    priceABigInt: BigInt(0),\n                    priceBBigInt: BigInt(10000)\n                };\n            } else {\n                return {\n                    priceA: 1,\n                    priceB: 0,\n                    priceABigInt: BigInt(10000),\n                    priceBBigInt: BigInt(0)\n                };\n            }\n        }\n  \n        const totalShares = yes_pool_balance + no_pool_balance;\n        const priceABigInt = (no_pool_balance * this.PRECISION) / totalShares;\n        const priceBBigInt = (yes_pool_balance * this.PRECISION) / totalShares;\n  \n        const priceA = Number(priceABigInt) / Number(this.PRECISION);\n        const priceB = Number(priceBBigInt) / Number(this.PRECISION);\n  \n        const sum = priceA + priceB;\n        if (Math.abs(sum - 1) > 0.0001) {\n            throw new Error('Invalid prices - must sum to 1');\n        }\n  \n        return {\n            priceA,\n            priceB,\n            priceABigInt,\n            priceBBigInt\n        };\n    }\n\n  private async getUserTokenBalances(market: PublicKey, user: PublicKey): Promise<[number, number, number]> {\n    try {\n      const marketAccount = await this.program.account.market.fetch(market);\n      const yesAta = await getAssociatedTokenAddressSync(marketAccount.yesMint, user, true);\n      const noAta = await getAssociatedTokenAddressSync(marketAccount.noMint, user, true);\n      const lpAta = await getAssociatedTokenAddressSync(marketAccount.lpMint, user, true);\n      \n      const [yesBalance, noBalance, lpBalance] = await Promise.all([\n        this.getTokenBalance(yesAta),\n        this.getTokenBalance(noAta),\n        this.getTokenBalance(lpAta)\n      ]);\n\n      return [yesBalance, noBalance, lpBalance];\n    } catch (error) {\n      console.error(\"Error getting user token balances:\", error);\n      return [0, 0, 0];\n    }\n  }\n\n  private async getTokenBalance(ata: PublicKey): Promise<number> {\n    try {\n      const account = await getAccount(this.provider.connection, ata);\n      return Number(account.amount);\n    } catch (e) {\n      return 0;\n    }\n  }\n\n  public async getMarket(marketPda: PublicKey): Promise<Market | null> {\n    const market = await this.program.account.market.fetch(marketPda);\n    console.log(\"market\", market);\n    const description = JSON.parse(market.description);\n    \n    const [usdcAta] = await this.getAtas(marketPda, marketPda);\n    const usdcBalance = await this.provider.connection.getTokenAccountBalance(usdcAta);\n    const prices = await this.getPrice(marketPda);\n    \n    let userYesBalance = 0;\n    let userNoBalance = 0;\n    let userLpBalance = 0;\n    if (this.provider.wallet.publicKey) {\n      [userYesBalance, userNoBalance, userLpBalance] = await this.getUserTokenBalances(\n        marketPda, \n        this.provider.wallet.publicKey\n      );\n    }\n\n    return {\n      creator: market.creator,\n      title: description.title,\n      desc: description.desc,\n      icon: description.icon,\n      publicKey: marketPda,\n      resolved: market.resolved,\n      outcome: market.outcome,\n      seed: Number(market.seed),\n      liquidity: Number(usdcBalance.value.amount),\n      yesAmount: prices.priceA,\n      noAmount: prices.priceB,\n      userYesBalance,\n      userNoBalance,\n      userLpBalance,\n    };\n  }\n}\n\n// Hook to create ProgramUtils instance\nexport const useProgramUtils = () => {\n  const { connection } = useConnection();\n  const { publicKey, signTransaction, signAllTransactions } = useWallet();\n  \n  if (!publicKey || !signTransaction || !signAllTransactions) {\n    return null;\n  }\n\n  const wallet = {\n    publicKey,\n    signTransaction,\n    signAllTransactions,\n    payer: Keypair.generate(),\n  };\n\n  return new ProgramUtils(connection, wallet);\n};\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 352, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 358, "column": 0}, "map": {"version":3,"sources":["file:///Users/santhosh/Documents/Turbin3/f4see/app/src/app/components/ShareButton.tsx"],"sourcesContent":["\"use client\";\n\nimport { ShareIcon } from \"@heroicons/react/24/outline\";\nimport { PublicKey } from \"@solana/web3.js\";\n\ninterface ShareButtonProps {\n  marketAddress: PublicKey;\n  className?: string;\n}\n\nexport function ShareButton({\n  marketAddress,\n  className = \"\",\n}: ShareButtonProps) {\n  const handleShare = () => {\n    const shareUrl = `https://dial.to/?action=solana-action:http://localhost:3001/api/donate?address=${marketAddress.toString()}`;\n\n    // Copy to clipboard\n    navigator.clipboard.writeText(shareUrl);\n\n    // Open in new tab\n    window.open(shareUrl, \"_blank\");\n  };\n\n  return (\n    <button\n      onClick={handleShare}\n      className={`p-2 rounded-lg bg-white/20 hover:bg-white/30 transition-colors text-white ${className}`}\n      title=\"Share market\"\n    >\n      <ShareIcon className=\"w-5 h-5\" />\n    </button>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAUO,SAAS,YAAY,EAC1B,aAAa,EACb,YAAY,EAAE,EACG;IACjB,MAAM,cAAc;QAClB,MAAM,WAAW,CAAC,+EAA+E,EAAE,cAAc,QAAQ,IAAI;QAE7H,oBAAoB;QACpB,UAAU,SAAS,CAAC,SAAS,CAAC;QAE9B,kBAAkB;QAClB,OAAO,IAAI,CAAC,UAAU;IACxB;IAEA,qBACE,6LAAC;QACC,SAAS;QACT,WAAW,CAAC,0EAA0E,EAAE,WAAW;QACnG,OAAM;kBAEN,cAAA,6LAAC,oNAAA,CAAA,YAAS;YAAC,WAAU;;;;;;;;;;;AAG3B;KAvBgB"}},
    {"offset": {"line": 397, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 403, "column": 0}, "map": {"version":3,"sources":["file:///Users/santhosh/Documents/Turbin3/f4see/app/src/app/components/LiveMarketDetailsModal.tsx"],"sourcesContent":["\"use client\";\n\nimport { Dialog } from \"@headlessui/react\";\nimport { useState } from \"react\";\nimport { Market, ProgramUtils } from \"../utils/ProgramUtils\";\nimport { ChevronDownIcon } from \"@heroicons/react/24/outline\";\nimport { useWallet } from \"@solana/wallet-adapter-react\";\nimport { Connection } from \"@solana/web3.js\";\nimport { ShareButton } from \"./ShareButton\";\n\ninterface Props {\n  isOpen: boolean;\n  onClose: () => void;\n  market: Market;\n}\n\nexport function LiveMarketDetailsModal({ isOpen, onClose, market }: Props) {\n  const [activeAccordion, setActiveAccordion] = useState<string | null>(null);\n  const [predictionAmount, setPredictionAmount] = useState(\"\");\n  const [liquidityAmount, setLiquidityAmount] = useState(\"\");\n  const [error, setError] = useState<string | null>(null);\n  const [isAddingLiquidity, setIsAddingLiquidity] = useState(false);\n  const [isBuying, setIsBuying] = useState(false);\n  const [isRemovingLiquidity, setIsRemovingLiquidity] = useState(false);\n  const wallet = useWallet();\n\n  const toggleAccordion = (section: string) => {\n    setActiveAccordion(activeAccordion === section ? null : section);\n  };\n\n  const handleAddLiquidity = async () => {\n    if (!wallet.publicKey) {\n      setError(\"Please connect your wallet first\");\n      return;\n    }\n\n    if (\n      !liquidityAmount ||\n      isNaN(Number(liquidityAmount)) ||\n      Number(liquidityAmount) <= 0\n    ) {\n      setError(\"Please enter a valid amount\");\n      return;\n    }\n\n    setIsAddingLiquidity(true);\n    setError(null);\n\n    try {\n      const connection = new Connection(\n        process.env.NEXT_PUBLIC_RPC_URL || \"https://api.devnet.solana.com\"\n      );\n      const programUtils = new ProgramUtils(connection, wallet);\n      const amount = Number(liquidityAmount);\n      const tx = await programUtils.addLiquidity(market.publicKey, amount);\n      console.log(\"Liquidity added successfully. Transaction signature:\", tx);\n      onClose();\n    } catch (err) {\n      console.error(\"Error adding liquidity:\", err);\n      setError(err instanceof Error ? err.message : \"Failed to add liquidity\");\n    } finally {\n      setIsAddingLiquidity(false);\n    }\n  };\n\n  const handleBuy = async (buyingYes: boolean) => {\n    if (!wallet.publicKey) {\n      setError(\"Please connect your wallet first\");\n      return;\n    }\n\n    if (\n      !predictionAmount ||\n      isNaN(Number(predictionAmount)) ||\n      Number(predictionAmount) <= 0\n    ) {\n      setError(\"Please enter a valid amount\");\n      return;\n    }\n\n    setIsBuying(true);\n    setError(null);\n\n    try {\n      const connection = new Connection(\n        process.env.NEXT_PUBLIC_RPC_URL || \"https://api.devnet.solana.com\"\n      );\n      const programUtils = new ProgramUtils(connection, wallet);\n      const amount = Number(predictionAmount);\n      const tx = await programUtils.buy(market.publicKey, buyingYes, amount);\n      console.log(\"Buy successful. Transaction signature:\", tx);\n      onClose();\n    } catch (err) {\n      console.error(\"Error buying tokens:\", err);\n      setError(err instanceof Error ? err.message : \"Failed to buy tokens\");\n    } finally {\n      setIsBuying(false);\n    }\n  };\n\n  const handleRemoveLiquidity = async () => {\n    if (!wallet.publicKey) {\n      setError(\"Please connect your wallet first\");\n      return;\n    }\n\n    setIsRemovingLiquidity(true);\n    setError(null);\n\n    try {\n      const connection = new Connection(\n        process.env.NEXT_PUBLIC_RPC_URL || \"https://api.devnet.solana.com\"\n      );\n      const programUtils = new ProgramUtils(connection, wallet);\n      const tx = await programUtils.removeLiquidity(\n        market.publicKey,\n        market.userLpBalance || 0\n      );\n      console.log(\"Liquidity removed successfully. Transaction signature:\", tx);\n      onClose();\n    } catch (err) {\n      console.error(\"Error removing liquidity:\", err);\n      setError(\n        err instanceof Error ? err.message : \"Failed to remove liquidity\"\n      );\n    } finally {\n      setIsRemovingLiquidity(false);\n    }\n  };\n\n  return (\n    <Dialog open={isOpen} onClose={onClose} className=\"relative z-50\">\n      <div\n        className=\"fixed inset-0 bg-black/30 backdrop-blur-sm\"\n        aria-hidden=\"true\"\n      />\n      <div className=\"fixed inset-0 flex items-center justify-center p-4\">\n        <Dialog.Panel className=\"bg-background rounded-xl w-full max-w-lg relative\">\n          <div className=\"absolute top-4 right-4 z-10\">\n            <ShareButton marketAddress={market.publicKey} />\n          </div>\n          {/* Main Content */}\n          <div className=\"p-6\">\n            {/* Image and Title Section */}\n            <div className=\"relative w-full h-[200px] rounded-lg overflow-hidden mb-4\">\n              <img\n                src={market.icon}\n                alt={market.title}\n                className=\"absolute inset-0 w-full h-full object-cover\"\n              />\n              <div className=\"absolute bottom-0 left-0 right-0 bg-black/50 backdrop-blur-sm p-2 flex flex-col gap-1\">\n                <div className=\"flex justify-between text-sm\">\n                  <span className=\"text-green-400\">\n                    YES: {(market.yesAmount * 100).toFixed(2)}%\n                  </span>\n                  <span className=\"text-red-400\">\n                    NO: {(market.noAmount * 100).toFixed(2)}%\n                  </span>\n                </div>\n                <div className=\"text-sm text-white/80\">\n                  Liquidity Pool: {market.liquidity.toFixed(2)} USDC\n                </div>\n              </div>\n            </div>\n\n            <Dialog.Title className=\"text-xl font-bold mb-2\">\n              {market.title}\n            </Dialog.Title>\n            <p className=\"text-white/60 text-sm mb-6\">{market.desc}</p>\n\n            {/* Accordions */}\n            <div className=\"space-y-2\">\n              {/* Predict Section */}\n              <div className=\"border border-white/10 rounded-lg overflow-hidden\">\n                <button\n                  onClick={() => toggleAccordion(\"predict\")}\n                  className=\"w-full px-4 py-3 flex justify-between items-center hover:bg-white/5\"\n                >\n                  <span className=\"font-medium\">Predict</span>\n                  <ChevronDownIcon\n                    className={`w-5 h-5 transition-transform ${\n                      activeAccordion === \"predict\" ? \"rotate-180\" : \"\"\n                    }`}\n                  />\n                </button>\n                {activeAccordion === \"predict\" && (\n                  <div className=\"p-4 border-t border-white/10\">\n                    <input\n                      type=\"number\"\n                      value={predictionAmount}\n                      onChange={(e) => setPredictionAmount(e.target.value)}\n                      className=\"w-full bg-white/5 border-border rounded-lg px-3 py-2 text-sm text-white mb-3\"\n                      placeholder=\"Enter amount\"\n                    />\n                    <div className=\"flex gap-2\">\n                      <button\n                        onClick={() => handleBuy(true)}\n                        disabled={isBuying}\n                        className=\"flex-1 bg-green-600/20 hover:bg-green-600/30 text-green-500 py-2 rounded-lg text-sm font-medium transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n                      >\n                        {isBuying ? \"Processing...\" : \"YES\"}\n                      </button>\n                      <button\n                        onClick={() => handleBuy(false)}\n                        disabled={isBuying}\n                        className=\"flex-1 bg-red-600/20 hover:bg-red-600/30 text-red-500 py-2 rounded-lg text-sm font-medium transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n                      >\n                        {isBuying ? \"Processing...\" : \"NO\"}\n                      </button>\n                    </div>\n                  </div>\n                )}\n              </div>\n\n              {/* Add Liquidity Section */}\n              <div className=\"border border-white/10 rounded-lg overflow-hidden\">\n                <button\n                  onClick={() => toggleAccordion(\"liquidity\")}\n                  className=\"w-full px-4 py-3 flex justify-between items-center hover:bg-white/5\"\n                >\n                  <span className=\"font-medium\">Liquidity</span>\n                  <ChevronDownIcon\n                    className={`w-5 h-5 transition-transform ${\n                      activeAccordion === \"liquidity\" ? \"rotate-180\" : \"\"\n                    }`}\n                  />\n                </button>\n                {activeAccordion === \"liquidity\" && (\n                  <div className=\"p-4 border-t border-white/10\">\n                    {/* Show LP balance if exists */}\n                    {market.userLpBalance && market.userLpBalance > 0 && (\n                      <div className=\"mb-4 p-3 bg-white/5 rounded-lg\">\n                        <p className=\"text-sm text-white/60 mb-1\">\n                          Your LP Balance:\n                        </p>\n                        <p className=\"text-white font-medium\">\n                          {market.userLpBalance.toFixed(2)} LP\n                        </p>\n                      </div>\n                    )}\n\n                    {/* Add Liquidity UI */}\n                    <input\n                      type=\"number\"\n                      value={liquidityAmount}\n                      onChange={(e) => setLiquidityAmount(e.target.value)}\n                      className=\"w-full bg-white/5 border-border rounded-lg px-3 py-2 text-sm text-white mb-3\"\n                      placeholder=\"Enter liquidity amount\"\n                    />\n                    <button\n                      onClick={handleAddLiquidity}\n                      disabled={isAddingLiquidity}\n                      className=\"w-full bg-blue-600/20 hover:bg-blue-600/30 text-blue-500 py-2 rounded-lg text-sm font-medium mb-3 disabled:opacity-50 disabled:cursor-not-allowed\"\n                    >\n                      {isAddingLiquidity\n                        ? \"Adding Liquidity...\"\n                        : \"Add Liquidity\"}\n                    </button>\n\n                    {/* Remove Liquidity button - only show if user has LP tokens */}\n                    {market.userLpBalance && market.userLpBalance > 0 && (\n                      <button\n                        onClick={handleRemoveLiquidity}\n                        disabled={isRemovingLiquidity}\n                        className=\"w-full bg-red-600/20 hover:bg-red-600/30 text-red-500 py-2 rounded-lg text-sm font-medium disabled:opacity-50 disabled:cursor-not-allowed\"\n                      >\n                        {isRemovingLiquidity\n                          ? \"Removing Liquidity...\"\n                          : \"Remove All Liquidity\"}\n                      </button>\n                    )}\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {error && (\n              <div className=\"mt-4 p-3 bg-red-500/20 border border-red-500 rounded-lg text-red-500 text-sm\">\n                {error}\n              </div>\n            )}\n          </div>\n        </Dialog.Panel>\n      </div>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 868, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 874, "column": 0}, "map": {"version":3,"sources":["file:///Users/santhosh/Documents/Turbin3/f4see/app/src/app/components/MarketCard.tsx"],"sourcesContent":["import { Market } from \"../utils/ProgramUtils\";\n\ninterface MarketCardProps {\n  market: Market;\n  onSelect: (market: Market) => void;\n  renderActions?: (market: Market) => React.ReactNode;\n  showPrices?: boolean;\n}\n\nexport function MarketCard({\n  market,\n  onSelect,\n  renderActions,\n  showPrices,\n}: MarketCardProps) {\n  return (\n    <div className=\"bg-input-background rounded-xl p-4 flex flex-col gap-4 group\">\n      {/* Image container with overlay button */}\n      <div className=\"relative pt-[70%] w-full bg-white/5 rounded-lg overflow-hidden\">\n        <img\n          src={market.icon}\n          alt={`Market ${market.seed}`}\n          className=\"absolute top-0 left-0 w-full h-full object-cover\"\n        />\n        {showPrices && (\n          <div className=\"absolute bottom-0 left-0 right-0 bg-black/50 backdrop-blur-sm p-2 flex flex-col gap-1\">\n            <div className=\"flex justify-between text-sm\">\n              <span className=\"text-green-400\">\n                YES: {(market.yesAmount * 100).toFixed(2)}%\n              </span>\n              <span className=\"text-red-400\">\n                NO: {(market.noAmount * 100).toFixed(2)}%\n              </span>\n            </div>\n            <div className=\"text-sm text-white/80\">\n              Liquidity: {market.liquidity.toFixed(2)} USDC\n            </div>\n          </div>\n        )}\n        <button\n          onClick={() => onSelect(market)}\n          className=\"absolute inset-0 bg-black/0 group-hover:bg-black/30 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-all duration-200\"\n        >\n          <span className=\"w-10 h-10 rounded-full bg-white/10 backdrop-blur-sm flex items-center justify-center text-white border border-white/20\">\n            +\n          </span>\n        </button>\n      </div>\n\n      {/* Title */}\n      <div>\n        <h3 className=\"font-medium text-white/90 line-clamp-2\">\n          {market.title}\n        </h3>\n        {market.outcome !== undefined && (\n          <p className=\"text-sm mt-1 text-white/60\">\n            Status:{\" \"}\n            {market.outcome === null\n              ? \"Active\"\n              : market.outcome\n              ? \"Resolved: YES\"\n              : \"Resolved: NO\"}\n          </p>\n        )}\n      </div>\n\n      {renderActions && renderActions(market)}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AASO,SAAS,WAAW,EACzB,MAAM,EACN,QAAQ,EACR,aAAa,EACb,UAAU,EACM;IAChB,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBACC,KAAK,OAAO,IAAI;wBAChB,KAAK,CAAC,OAAO,EAAE,OAAO,IAAI,EAAE;wBAC5B,WAAU;;;;;;oBAEX,4BACC,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAK,WAAU;;4CAAiB;4CACzB,CAAC,OAAO,SAAS,GAAG,GAAG,EAAE,OAAO,CAAC;4CAAG;;;;;;;kDAE5C,6LAAC;wCAAK,WAAU;;4CAAe;4CACxB,CAAC,OAAO,QAAQ,GAAG,GAAG,EAAE,OAAO,CAAC;4CAAG;;;;;;;;;;;;;0CAG5C,6LAAC;gCAAI,WAAU;;oCAAwB;oCACzB,OAAO,SAAS,CAAC,OAAO,CAAC;oCAAG;;;;;;;;;;;;;kCAI9C,6LAAC;wBACC,SAAS,IAAM,SAAS;wBACxB,WAAU;kCAEV,cAAA,6LAAC;4BAAK,WAAU;sCAAyH;;;;;;;;;;;;;;;;;0BAO7I,6LAAC;;kCACC,6LAAC;wBAAG,WAAU;kCACX,OAAO,KAAK;;;;;;oBAEd,OAAO,OAAO,KAAK,2BAClB,6LAAC;wBAAE,WAAU;;4BAA6B;4BAChC;4BACP,OAAO,OAAO,KAAK,OAChB,WACA,OAAO,OAAO,GACd,kBACA;;;;;;;;;;;;;YAKT,iBAAiB,cAAc;;;;;;;AAGtC;KA5DgB"}},
    {"offset": {"line": 1013, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1019, "column": 0}, "map": {"version":3,"sources":["file:///Users/santhosh/Documents/Turbin3/f4see/app/src/app/hooks/useMarkets.ts"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Market, ProgramUtils } from \"../utils/ProgramUtils\";\nimport { Connection } from \"@solana/web3.js\";\nimport { useWallet } from \"@solana/wallet-adapter-react\";\n\nexport function useMarkets(filter?: (market: Market) => boolean) {\n  const [markets, setMarkets] = useState<Market[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const wallet = useWallet();\n\n  const loadMarkets = async () => {\n    try {\n      setLoading(true);\n      const connection = new Connection(\n        process.env.NEXT_PUBLIC_RPC_URL || \"https://api.devnet.solana.com\"\n      );\n      console.log(\"Calling hook\");\n      const programUtils = new ProgramUtils(connection, wallet);\n      const allMarkets = await programUtils.getMarkets();\n      const filteredMarkets = filter ? allMarkets.filter(filter) : allMarkets;\n      setMarkets(filteredMarkets);\n    } catch (err) {\n      console.error(\"Error loading markets:\", err);\n      setError(err instanceof Error ? err.message : \"Failed to load markets\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadMarkets();\n  }, [wallet.publicKey]);\n\n  return { markets, loading, error, reload: loadMarkets };\n} "],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AAYQ;;;;;;AAVD,SAAS,WAAW,MAAoC;;IAC7D,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IACnD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,SAAS,CAAA,GAAA,oLAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,cAAc;QAClB,IAAI;YACF,WAAW;YACX,MAAM,aAAa,IAAI,2KAAA,CAAA,aAAU,CAC/B,6DAAmC;YAErC,QAAQ,GAAG,CAAC;YACZ,MAAM,eAAe,IAAI,sIAAA,CAAA,eAAY,CAAC,YAAY;YAClD,MAAM,aAAa,MAAM,aAAa,UAAU;YAChD,MAAM,kBAAkB,SAAS,WAAW,MAAM,CAAC,UAAU;YAC7D,WAAW;QACb,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,0BAA0B;YACxC,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;QAChD,SAAU;YACR,WAAW;QACb;IACF;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;gCAAE;YACR;QACF;+BAAG;QAAC,OAAO,SAAS;KAAC;IAErB,OAAO;QAAE;QAAS;QAAS;QAAO,QAAQ;IAAY;AACxD;GA9BgB;;QAIC,oLAAA,CAAA,YAAS"}},
    {"offset": {"line": 1076, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1082, "column": 0}, "map": {"version":3,"sources":["file:///Users/santhosh/Documents/Turbin3/f4see/app/src/app/components/EmptyState.tsx"],"sourcesContent":["interface EmptyStateProps {\n  icon: \"lock\" | \"info\";\n  title: string;\n  description: string;\n}\n\nexport function EmptyState({ icon, title, description }: EmptyStateProps) {\n  const icons = {\n    lock: (\n      <svg\n        className=\"w-8 h-8 text-white/40\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke=\"currentColor\"\n      >\n        <path\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth={2}\n          d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\"\n        />\n      </svg>\n    ),\n    info: (\n      <svg\n        className=\"w-8 h-8 text-white/40\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke=\"currentColor\"\n      >\n        <path\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth={2}\n          d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n        />\n      </svg>\n    ),\n  };\n\n  return (\n    <div className=\"flex flex-col items-center justify-center py-20 text-center\">\n      <div className=\"w-16 h-16 mb-4 rounded-full bg-white/5 flex items-center justify-center\">\n        {icons[icon]}\n      </div>\n      <h3 className=\"text-xl font-medium text-white/90 mb-2\">{title}</h3>\n      <p className=\"text-white/60 max-w-sm\">{description}</p>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAMO,SAAS,WAAW,EAAE,IAAI,EAAE,KAAK,EAAE,WAAW,EAAmB;IACtE,MAAM,QAAQ;QACZ,oBACE,6LAAC;YACC,WAAU;YACV,MAAK;YACL,SAAQ;YACR,QAAO;sBAEP,cAAA,6LAAC;gBACC,eAAc;gBACd,gBAAe;gBACf,aAAa;gBACb,GAAE;;;;;;;;;;;QAIR,oBACE,6LAAC;YACC,WAAU;YACV,MAAK;YACL,SAAQ;YACR,QAAO;sBAEP,cAAA,6LAAC;gBACC,eAAc;gBACd,gBAAe;gBACf,aAAa;gBACb,GAAE;;;;;;;;;;;IAIV;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;0BACZ,KAAK,CAAC,KAAK;;;;;;0BAEd,6LAAC;gBAAG,WAAU;0BAA0C;;;;;;0BACxD,6LAAC;gBAAE,WAAU;0BAA0B;;;;;;;;;;;;AAG7C;KA3CgB"}},
    {"offset": {"line": 1170, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1176, "column": 0}, "map": {"version":3,"sources":["file:///Users/santhosh/Documents/Turbin3/f4see/app/src/app/hooks/useBuyMarket.ts"],"sourcesContent":["import { useState } from \"react\";\nimport { Market, ProgramUtils } from \"../utils/ProgramUtils\";\nimport { Connection } from \"@solana/web3.js\";\nimport { useWallet } from \"@solana/wallet-adapter-react\";\n\ninterface Amounts {\n  [key: number]: string;\n}\n\nexport function useBuyMarket() {\n  const [error, setError] = useState<string | null>(null);\n  const [isBuying, setIsBuying] = useState<number | null>(null);\n  const [amounts, setAmounts] = useState<Amounts>({});\n  const wallet = useWallet();\n\n  const handleBuy = async (market: Market, buyingYes: boolean) => {\n    if (!wallet.publicKey) {\n      setError(\"Please connect your wallet first\");\n      return;\n    }\n\n    const amount = amounts[market.seed];\n    if (!amount || isNaN(Number(amount)) || Number(amount) <= 0) {\n      setError(\"Please enter a valid amount\");\n      return;\n    }\n\n    setIsBuying(market.seed);\n    setError(null);\n\n    try {\n      const connection = new Connection(\n        process.env.NEXT_PUBLIC_RPC_URL || \"https://api.devnet.solana.com\"\n      );\n      const programUtils = new ProgramUtils(connection, wallet);\n      const tx = await programUtils.buy(\n        market.publicKey,\n        buyingYes,\n        Number(amount)\n      );\n      console.log(\"Buy successful. Transaction signature:\", tx);\n      // Reset amount after successful purchase\n      setAmounts((prev) => ({ ...prev, [market.seed]: \"\" }));\n    } catch (err) {\n      console.error(\"Error buying tokens:\", err);\n      setError(err instanceof Error ? err.message : \"Failed to buy tokens\");\n    } finally {\n      setIsBuying(null);\n    }\n  };\n\n  return {\n    handleBuy,\n    error,\n    isBuying,\n    amounts,\n    setAmounts,\n  };\n} "],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AA6BQ;;;;;;AAvBD,SAAS;;IACd,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IACxD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW,CAAC;IACjD,MAAM,SAAS,CAAA,GAAA,oLAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,YAAY,OAAO,QAAgB;QACvC,IAAI,CAAC,OAAO,SAAS,EAAE;YACrB,SAAS;YACT;QACF;QAEA,MAAM,SAAS,OAAO,CAAC,OAAO,IAAI,CAAC;QACnC,IAAI,CAAC,UAAU,MAAM,OAAO,YAAY,OAAO,WAAW,GAAG;YAC3D,SAAS;YACT;QACF;QAEA,YAAY,OAAO,IAAI;QACvB,SAAS;QAET,IAAI;YACF,MAAM,aAAa,IAAI,2KAAA,CAAA,aAAU,CAC/B,6DAAmC;YAErC,MAAM,eAAe,IAAI,sIAAA,CAAA,eAAY,CAAC,YAAY;YAClD,MAAM,KAAK,MAAM,aAAa,GAAG,CAC/B,OAAO,SAAS,EAChB,WACA,OAAO;YAET,QAAQ,GAAG,CAAC,0CAA0C;YACtD,yCAAyC;YACzC,WAAW,CAAC,OAAS,CAAC;oBAAE,GAAG,IAAI;oBAAE,CAAC,OAAO,IAAI,CAAC,EAAE;gBAAG,CAAC;QACtD,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,wBAAwB;YACtC,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;QAChD,SAAU;YACR,YAAY;QACd;IACF;IAEA,OAAO;QACL;QACA;QACA;QACA;QACA;IACF;AACF;GAjDgB;;QAIC,oLAAA,CAAA,YAAS"}},
    {"offset": {"line": 1240, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1246, "column": 0}, "map": {"version":3,"sources":["file:///Users/santhosh/Documents/Turbin3/f4see/app/src/app/markets/live/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { LiveMarketDetailsModal } from \"../../components/LiveMarketDetailsModal\";\nimport { useWallet } from \"@solana/wallet-adapter-react\";\nimport { Market } from \"../../utils/ProgramUtils\";\nimport { MarketCard } from \"../../components/MarketCard\";\nimport { useMarkets } from \"../../hooks/useMarkets\";\nimport { EmptyState } from \"../../components/EmptyState\";\nimport { useBuyMarket } from \"../../hooks/useBuyMarket\";\nimport { ShareButton } from \"../../components/ShareButton\";\n\nexport default function Markets() {\n  const [selectedMarket, setSelectedMarket] = useState<Market | null>(null);\n  const { publicKey } = useWallet();\n  const { markets, loading, error } = useMarkets((m) => !m.resolved);\n  const {\n    handleBuy,\n    error: buyError,\n    isBuying,\n    amounts,\n    setAmounts,\n  } = useBuyMarket();\n\n  const renderMarketActions = (market: Market) => (\n    <>\n      <input\n        type=\"number\"\n        value={amounts[market.seed] || \"\"}\n        onChange={(e) =>\n          setAmounts((prev) => ({ ...prev, [market.seed]: e.target.value }))\n        }\n        className=\"w-full bg-white/5 border-border rounded-lg px-3 py-2 text-sm text-white focus:outline-none focus:ring-1 focus:ring-border\"\n        placeholder=\"Enter amount\"\n      />\n      <div className=\"flex gap-2\">\n        <button\n          onClick={() => handleBuy(market, true)}\n          disabled={isBuying === market.seed}\n          className=\"flex-1 bg-green-600/20 hover:bg-green-600/30 text-green-500 py-2 rounded-lg text-sm font-medium transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n        >\n          {isBuying === market.seed ? \"Processing...\" : \"YES\"}\n        </button>\n        <button\n          onClick={() => handleBuy(market, false)}\n          disabled={isBuying === market.seed}\n          className=\"flex-1 bg-red-600/20 hover:bg-red-600/30 text-red-500 py-2 rounded-lg text-sm font-medium transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n        >\n          {isBuying === market.seed ? \"Processing...\" : \"NO\"}\n        </button>\n      </div>\n    </>\n  );\n\n  if (!publicKey) {\n    return (\n      <EmptyState\n        icon=\"lock\"\n        title=\"Wallet Not Connected\"\n        description=\"Please connect your wallet to view and participate in markets.\"\n      />\n    );\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"p-4\">\n      <h1 className=\"text-2xl font-bold mb-4\">Markets</h1>\n      {(error || buyError) && (\n        <div className=\"mb-4 p-3 bg-red-500/20 border border-red-500 rounded-lg text-red-500 text-sm\">\n          {error || buyError}\n        </div>\n      )}\n\n      {markets.length > 0 ? (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n          {markets.map((market) => (\n            <div className=\"relative\">\n              <MarketCard\n                key={market.seed}\n                market={market}\n                onSelect={setSelectedMarket}\n                renderActions={() => renderMarketActions(market)}\n                showPrices\n              />\n              <div className=\"absolute top-2 right-2\">\n                <ShareButton\n                  marketAddress={market.publicKey}\n                  className=\"bg-black/30 hover:bg-black/50\"\n                />\n              </div>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <EmptyState\n          icon=\"info\"\n          title=\"No Markets Available\"\n          description=\"There are currently no live markets available. Check back later or create your own market.\"\n        />\n      )}\n\n      {selectedMarket && (\n        <LiveMarketDetailsModal\n          isOpen={!!selectedMarket}\n          onClose={() => setSelectedMarket(null)}\n          market={selectedMarket}\n        />\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AANA;;;AAJA;;;;;;;;;AAYe,SAAS;;IACtB,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IACpE,MAAM,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,oLAAA,CAAA,YAAS,AAAD;IAC9B,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,oIAAA,CAAA,aAAU,AAAD;8BAAE,CAAC,IAAM,CAAC,EAAE,QAAQ;;IACjE,MAAM,EACJ,SAAS,EACT,OAAO,QAAQ,EACf,QAAQ,EACR,OAAO,EACP,UAAU,EACX,GAAG,CAAA,GAAA,sIAAA,CAAA,eAAY,AAAD;IAEf,MAAM,sBAAsB,CAAC,uBAC3B;;8BACE,6LAAC;oBACC,MAAK;oBACL,OAAO,OAAO,CAAC,OAAO,IAAI,CAAC,IAAI;oBAC/B,UAAU,CAAC,IACT,WAAW,CAAC,OAAS,CAAC;gCAAE,GAAG,IAAI;gCAAE,CAAC,OAAO,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,KAAK;4BAAC,CAAC;oBAElE,WAAU;oBACV,aAAY;;;;;;8BAEd,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BACC,SAAS,IAAM,UAAU,QAAQ;4BACjC,UAAU,aAAa,OAAO,IAAI;4BAClC,WAAU;sCAET,aAAa,OAAO,IAAI,GAAG,kBAAkB;;;;;;sCAEhD,6LAAC;4BACC,SAAS,IAAM,UAAU,QAAQ;4BACjC,UAAU,aAAa,OAAO,IAAI;4BAClC,WAAU;sCAET,aAAa,OAAO,IAAI,GAAG,kBAAkB;;;;;;;;;;;;;;IAMtD,IAAI,CAAC,WAAW;QACd,qBACE,6LAAC,0IAAA,CAAA,aAAU;YACT,MAAK;YACL,OAAM;YACN,aAAY;;;;;;IAGlB;IAEA,IAAI,SAAS;QACX,qBAAO,6LAAC;sBAAI;;;;;;IACd;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAA0B;;;;;;YACvC,CAAC,SAAS,QAAQ,mBACjB,6LAAC;gBAAI,WAAU;0BACZ,SAAS;;;;;;YAIb,QAAQ,MAAM,GAAG,kBAChB,6LAAC;gBAAI,WAAU;0BACZ,QAAQ,GAAG,CAAC,CAAC,uBACZ,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,0IAAA,CAAA,aAAU;gCAET,QAAQ;gCACR,UAAU;gCACV,eAAe,IAAM,oBAAoB;gCACzC,UAAU;+BAJL,OAAO,IAAI;;;;;0CAMlB,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC,2IAAA,CAAA,cAAW;oCACV,eAAe,OAAO,SAAS;oCAC/B,WAAU;;;;;;;;;;;;;;;;;;;;;qCAOpB,6LAAC,0IAAA,CAAA,aAAU;gBACT,MAAK;gBACL,OAAM;gBACN,aAAY;;;;;;YAIf,gCACC,6LAAC,sJAAA,CAAA,yBAAsB;gBACrB,QAAQ,CAAC,CAAC;gBACV,SAAS,IAAM,kBAAkB;gBACjC,QAAQ;;;;;;;;;;;;AAKlB;GAtGwB;;QAEA,oLAAA,CAAA,YAAS;QACK,oIAAA,CAAA,aAAU;QAO1C,sIAAA,CAAA,eAAY;;;KAVM"}},
    {"offset": {"line": 1441, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}