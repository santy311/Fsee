"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/donate/route";
exports.ids = ["app/api/donate/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("net");

/***/ }),

/***/ "node:crypto":
/*!******************************!*\
  !*** external "node:crypto" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:crypto");

/***/ }),

/***/ "node:url":
/*!***************************!*\
  !*** external "node:url" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("node:url");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "process":
/*!**************************!*\
  !*** external "process" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("process");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fdonate%2Froute&page=%2Fapi%2Fdonate%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fdonate%2Froute.ts&appDir=%2FUsers%2Fsanthosh%2FDocuments%2FTurbin3%2Ff4see%2Fblinks%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsanthosh%2FDocuments%2FTurbin3%2Ff4see%2Fblinks&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fdonate%2Froute&page=%2Fapi%2Fdonate%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fdonate%2Froute.ts&appDir=%2FUsers%2Fsanthosh%2FDocuments%2FTurbin3%2Ff4see%2Fblinks%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsanthosh%2FDocuments%2FTurbin3%2Ff4see%2Fblinks&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_santhosh_Documents_Turbin3_f4see_blinks_src_app_api_donate_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/donate/route.ts */ \"(rsc)/./src/app/api/donate/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/donate/route\",\n        pathname: \"/api/donate\",\n        filename: \"route\",\n        bundlePath: \"app/api/donate/route\"\n    },\n    resolvedPagePath: \"/Users/santhosh/Documents/Turbin3/f4see/blinks/src/app/api/donate/route.ts\",\n    nextConfigOutput,\n    userland: _Users_santhosh_Documents_Turbin3_f4see_blinks_src_app_api_donate_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/donate/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZkb25hdGUlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmRvbmF0ZSUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmRvbmF0ZSUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRnNhbnRob3NoJTJGRG9jdW1lbnRzJTJGVHVyYmluMyUyRmY0c2VlJTJGYmxpbmtzJTJGc3JjJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRnNhbnRob3NoJTJGRG9jdW1lbnRzJTJGVHVyYmluMyUyRmY0c2VlJTJGYmxpbmtzJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUMwQjtBQUN2RztBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL2JsaW5rcy1leGFtcGxlLz9iMzc4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi9Vc2Vycy9zYW50aG9zaC9Eb2N1bWVudHMvVHVyYmluMy9mNHNlZS9ibGlua3Mvc3JjL2FwcC9hcGkvZG9uYXRlL3JvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9kb25hdGUvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9kb25hdGVcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL2RvbmF0ZS9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9Vc2Vycy9zYW50aG9zaC9Eb2N1bWVudHMvVHVyYmluMy9mNHNlZS9ibGlua3Mvc3JjL2FwcC9hcGkvZG9uYXRlL3JvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9kb25hdGUvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fdonate%2Froute&page=%2Fapi%2Fdonate%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fdonate%2Froute.ts&appDir=%2FUsers%2Fsanthosh%2FDocuments%2FTurbin3%2Ff4see%2Fblinks%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsanthosh%2FDocuments%2FTurbin3%2Ff4see%2Fblinks&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/donate/route.ts":
/*!*************************************!*\
  !*** ./src/app/api/donate/route.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   OPTIONS: () => (/* binding */ OPTIONS),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var _solana_actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @solana/actions */ \"(rsc)/./node_modules/@solana/actions/lib/esm/constants.js\");\n/* harmony import */ var _solana_actions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @solana/actions */ \"(rsc)/./node_modules/@solana/actions/lib/esm/createPostResponse.js\");\n/* harmony import */ var _app_utils_ProgramUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/app/utils/ProgramUtils */ \"(rsc)/./src/app/utils/ProgramUtils.ts\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/web3.js */ \"(rsc)/./node_modules/@solana/web3.js/lib/index.esm.js\");\n\n\n\nasync function GET(request) {\n    console.log(\"GET request received\");\n    console.log(request.url);\n    let baseUrl;\n    try {\n        baseUrl = request.url;\n    } catch (error) {\n        baseUrl = `${\"http://localhost:3001\" || 0}/api/donate`;\n    }\n    const url = new URL(baseUrl);\n    const addressParam = url.searchParams.get(\"address\");\n    if (!addressParam) {\n        return Response.json({\n            error: \"Address is required\"\n        }, {\n            status: 400,\n            headers: _solana_actions__WEBPACK_IMPORTED_MODULE_2__.ACTIONS_CORS_HEADERS\n        });\n    }\n    try {\n        // Validate the address is a valid PublicKey before proceeding\n        let marketAddress;\n        try {\n            marketAddress = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey(addressParam);\n        } catch (error) {\n            return Response.json({\n                error: \"Invalid market address format\"\n            }, {\n                status: 400,\n                headers: _solana_actions__WEBPACK_IMPORTED_MODULE_2__.ACTIONS_CORS_HEADERS\n            });\n        }\n        // Create a dummy wallet for read-only operations\n        const dummyWallet = {\n            publicKey: null,\n            signTransaction: null,\n            signAllTransactions: null,\n            payer: null\n        };\n        const connection = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.Connection(\"http://localhost:8899\", \"confirmed\");\n        const programUtils = new _app_utils_ProgramUtils__WEBPACK_IMPORTED_MODULE_0__.ProgramUtils(connection, dummyWallet);\n        console.log(\"Trying to get market for address\", marketAddress.toBase58());\n        const market = await programUtils.getMarket(marketAddress);\n        console.log(\"Market fetched\", market);\n        if (!market) {\n            return Response.json({\n                error: \"Market not found\"\n            }, {\n                status: 404,\n                headers: _solana_actions__WEBPACK_IMPORTED_MODULE_2__.ACTIONS_CORS_HEADERS\n            });\n        }\n        const payload = {\n            icon: \"http://localhost:3000\" + market.icon || 0,\n            title: market.title || \"AWESOME MARKET\",\n            description: market.desc || \"Developed by the best devs in the world\",\n            label: \"Predict\",\n            links: {\n                actions: [\n                    {\n                        type: \"transaction\",\n                        label: \"$10 on Yes\",\n                        href: `${url.href}?choice=yes&amount=10`\n                    },\n                    {\n                        type: \"transaction\",\n                        label: \"$10 on No\",\n                        href: `${url.href}?choice=no&amount=10`\n                    },\n                    {\n                        type: \"transaction\",\n                        label: \"Buy Yes\",\n                        href: `${url.href}?choice=yes&amount={amount}`,\n                        parameters: [\n                            {\n                                name: \"amount\",\n                                label: `at $${market.yesAmount} a share`,\n                                type: \"number\",\n                                required: true\n                            }\n                        ]\n                    },\n                    {\n                        type: \"transaction\",\n                        label: \"Buy No\",\n                        href: `${url.href}?choice=no&amount={amount}`,\n                        parameters: [\n                            {\n                                name: \"amount\",\n                                label: `at $${market.noAmount} a share`,\n                                type: \"number\",\n                                required: true\n                            }\n                        ]\n                    }\n                ]\n            }\n        };\n        return Response.json(payload, {\n            headers: _solana_actions__WEBPACK_IMPORTED_MODULE_2__.ACTIONS_CORS_HEADERS\n        });\n    } catch (error) {\n        console.error(\"Error fetching market:\", error);\n        return Response.json({\n            error: \"Failed to fetch market details\"\n        }, {\n            status: 500,\n            headers: _solana_actions__WEBPACK_IMPORTED_MODULE_2__.ACTIONS_CORS_HEADERS\n        });\n    }\n}\nconst OPTIONS = GET; // Allow OPTIONS request to use GET handler\nasync function POST(request) {\n    const body = await request.json();\n    let baseUrl;\n    try {\n        baseUrl = request.url;\n    } catch (error) {\n        baseUrl = `${\"http://localhost:3001\" || 0}/api/donate`;\n    }\n    const url = new URL(baseUrl);\n    const addressParam = url.searchParams.get(\"address\");\n    const prediction = url.searchParams.get(\"prediction\");\n    const amount = body.inputs?.amount ? parseFloat(body.inputs.amount) : 0.1;\n    let sender;\n    if (!addressParam) {\n        return Response.json({\n            error: {\n                message: \"Market address is required\"\n            }\n        }, {\n            status: 400,\n            headers: _solana_actions__WEBPACK_IMPORTED_MODULE_2__.ACTIONS_CORS_HEADERS\n        });\n    }\n    if (!prediction || ![\n        \"yes\",\n        \"no\"\n    ].includes(prediction.toLowerCase())) {\n        return Response.json({\n            error: {\n                message: \"Valid prediction (yes/no) is required\"\n            }\n        }, {\n            status: 400,\n            headers: _solana_actions__WEBPACK_IMPORTED_MODULE_2__.ACTIONS_CORS_HEADERS\n        });\n    }\n    try {\n        sender = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey(body.account);\n    } catch (error) {\n        return Response.json({\n            error: {\n                message: \"Invalid account\"\n            }\n        }, {\n            status: 400,\n            headers: _solana_actions__WEBPACK_IMPORTED_MODULE_2__.ACTIONS_CORS_HEADERS\n        });\n    }\n    const connection = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.Connection((0,_solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.clusterApiUrl)(\"mainnet-beta\"), \"confirmed\");\n    try {\n        const marketAddress = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey(addressParam);\n        const programUtils = new _app_utils_ProgramUtils__WEBPACK_IMPORTED_MODULE_0__.ProgramUtils(connection, {\n            publicKey: sender\n        });\n        // Create the prediction transaction\n        const transaction = await programUtils.createPredictionTransaction(marketAddress, prediction.toLowerCase() === \"yes\", amount * _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.LAMPORTS_PER_SOL);\n        transaction.feePayer = sender;\n        transaction.recentBlockhash = (await connection.getLatestBlockhash()).blockhash;\n        transaction.lastValidBlockHeight = (await connection.getLatestBlockhash()).lastValidBlockHeight;\n        const payload = await (0,_solana_actions__WEBPACK_IMPORTED_MODULE_3__.createPostResponse)({\n            fields: {\n                transaction,\n                message: `Transaction created for ${prediction.toUpperCase()} prediction with ${amount} SOL`,\n                type: \"transaction\"\n            }\n        });\n        return new Response(JSON.stringify(payload), {\n            headers: _solana_actions__WEBPACK_IMPORTED_MODULE_2__.ACTIONS_CORS_HEADERS\n        });\n    } catch (error) {\n        console.error(\"Error creating prediction transaction:\", error);\n        return Response.json({\n            error: {\n                message: \"Failed to create prediction transaction\"\n            }\n        }, {\n            status: 500,\n            headers: _solana_actions__WEBPACK_IMPORTED_MODULE_2__.ACTIONS_CORS_HEADERS\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/donate/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/app/utils/ProgramUtils.ts":
/*!***************************************!*\
  !*** ./src/app/utils/ProgramUtils.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CONFIRM_OPTIONS: () => (/* binding */ CONFIRM_OPTIONS),\n/* harmony export */   ProgramUtils: () => (/* binding */ ProgramUtils)\n/* harmony export */ });\n/* harmony import */ var _coral_xyz_anchor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @coral-xyz/anchor */ \"(rsc)/./node_modules/@coral-xyz/anchor/dist/esm/index.js\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/web3.js */ \"(rsc)/./node_modules/@solana/web3.js/lib/index.esm.js\");\n/* harmony import */ var _solana_idl_fsee_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../solana/idl/fsee.json */ \"(rsc)/./src/app/solana/idl/fsee.json\");\n/* harmony import */ var _solana_spl_token__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @solana/spl-token */ \"(rsc)/./node_modules/@solana/spl-token/lib/esm/state/mint.js\");\n/* harmony import */ var _solana_spl_token__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @solana/spl-token */ \"(rsc)/./node_modules/@solana/spl-token/lib/esm/state/account.js\");\n/* harmony import */ var _solana_spl_token__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @solana/spl-token */ \"(rsc)/./node_modules/@solana/spl-token/lib/esm/errors.js\");\n/* harmony import */ var _solana_spl_token__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @solana/spl-token */ \"(rsc)/./node_modules/@solana/spl-token/lib/esm/instructions/associatedTokenAccount.js\");\n\n\n\n\nconst CONFIRM_OPTIONS = {\n    commitment: \"finalized\"\n};\nclass ProgramUtils {\n    constructor(connection, wallet){\n        this.PRECISION = BigInt(10000);\n        this.provider = new _coral_xyz_anchor__WEBPACK_IMPORTED_MODULE_0__.AnchorProvider(connection, wallet, _coral_xyz_anchor__WEBPACK_IMPORTED_MODULE_0__.AnchorProvider.defaultOptions());\n        (0,_coral_xyz_anchor__WEBPACK_IMPORTED_MODULE_0__.setProvider)(this.provider);\n        const programId = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey(_solana_idl_fsee_json__WEBPACK_IMPORTED_MODULE_2__.address);\n        console.log(\"Program ID from IDL:\", programId.toString());\n        this.program = new _coral_xyz_anchor__WEBPACK_IMPORTED_MODULE_0__.Program(_solana_idl_fsee_json__WEBPACK_IMPORTED_MODULE_2__, this.provider);\n    }\n    async initializeMarket(seed, title, description, icon) {\n        try {\n            const descriptionJSON = {\n                title: title,\n                desc: description,\n                icon: icon\n            };\n            const descriptionString = JSON.stringify(descriptionJSON);\n            const seed_bn = new _coral_xyz_anchor__WEBPACK_IMPORTED_MODULE_0__.BN(seed);\n            const market = _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey.findProgramAddressSync([\n                Buffer.from(\"market\"),\n                this.provider.wallet.publicKey.toBuffer(),\n                Buffer.from(seed_bn.toArrayLike(Buffer, \"le\", 8))\n            ], new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey(_solana_idl_fsee_json__WEBPACK_IMPORTED_MODULE_2__.address))[0];\n            const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.Transaction();\n            const tx_ix1 = await this.program.methods.initializeMarket(seed_bn, descriptionString).accounts({\n                creator: this.provider.wallet.publicKey,\n                usdcMint: new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey(\"TTixtnUHcNPsQhDVZvBFDiUamVbz1kyM5QnbCmyFtP4\")\n            }).instruction();\n            const tx_ix2 = await this.program.methods.initializeNoMints().accountsPartial({\n                creator: this.provider.wallet.publicKey,\n                market: market\n            }).instruction();\n            const tx_ix3 = await this.program.methods.initializeYesMints().accountsPartial({\n                creator: this.provider.wallet.publicKey,\n                market: market\n            }).instruction();\n            transaction.add(tx_ix1, tx_ix2, tx_ix3);\n            const hash = await this.provider.sendAll([\n                {\n                    tx: transaction\n                }\n            ], {\n                commitment: \"finalized\"\n            });\n            console.log(\"Transaction hash:\", hash);\n            console.log(\"Market created with address:\", market.toBase58());\n            console.log(\"market\", await this.getMarket(market));\n            return market;\n        } catch (error) {\n            console.error(\"Error in initializeMarket:\", error);\n            throw error;\n        }\n    }\n    async addLiquidity(market, amount) {\n        console.log(\"Adding liquidity to market:\", market.toBase58());\n        console.log(\"Amount:\", amount);\n        console.log(\"user\", this.provider.wallet.publicKey);\n        const ata_ixs = await this.createATAs(market, this.provider.wallet.publicKey);\n        console.log(\"ata_ixs\", ata_ixs);\n        const ix = await this.program.methods.addLiquidity(new _coral_xyz_anchor__WEBPACK_IMPORTED_MODULE_0__.BN(amount)).accountsPartial({\n            liquidityProvider: this.provider.wallet.publicKey,\n            usdcMint: new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey(\"TTixtnUHcNPsQhDVZvBFDiUamVbz1kyM5QnbCmyFtP4\"),\n            market: market\n        }).instruction();\n        const latestBlockhash = await this.provider.connection.getLatestBlockhash();\n        // Create a new TransactionMessage with version and compile it to version 0\n        const messageV0 = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.TransactionMessage({\n            payerKey: this.provider.wallet.publicKey,\n            recentBlockhash: latestBlockhash.blockhash,\n            instructions: [\n                ...ata_ixs,\n                ix\n            ]\n        }).compileToV0Message();\n        // Create a new VersionedTransacction to support the v0 message\n        const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.VersionedTransaction(messageV0);\n        // Send transaction and await for signature\n        const signature = await this.provider.sendAll([\n            {\n                tx: transaction\n            }\n        ], CONFIRM_OPTIONS);\n        console.log(\"Signature:\", signature);\n        return signature[0];\n    }\n    async buy(market, buyingYes, amount) {\n        const tx = await this.program.methods.buy(buyingYes, new _coral_xyz_anchor__WEBPACK_IMPORTED_MODULE_0__.BN(amount)).accountsPartial({\n            predictor: this.provider.wallet.publicKey,\n            usdcMint: new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey(\"TTixtnUHcNPsQhDVZvBFDiUamVbz1kyM5QnbCmyFtP4\"),\n            market: market\n        }).rpc(CONFIRM_OPTIONS);\n        console.log(\"tx\", tx);\n        return tx;\n    }\n    async resolveMarket(market, outcome) {\n        const tx = await this.program.methods.resolveMarket(outcome).accountsPartial({\n            predictor: this.provider.wallet.publicKey,\n            market: market\n        }).rpc(CONFIRM_OPTIONS);\n        console.log(\"tx\", tx);\n        return tx;\n    }\n    async redeemTokens(market, yesAmount, noAmount) {\n        const tx = await this.program.methods.redeemTokens(new _coral_xyz_anchor__WEBPACK_IMPORTED_MODULE_0__.BN(yesAmount), new _coral_xyz_anchor__WEBPACK_IMPORTED_MODULE_0__.BN(noAmount)).accountsPartial({\n            predictor: this.provider.wallet.publicKey,\n            usdcMint: new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey(\"TTixtnUHcNPsQhDVZvBFDiUamVbz1kyM5QnbCmyFtP4\"),\n            market: market\n        }).rpc(CONFIRM_OPTIONS);\n        console.log(\"tx\", tx);\n        return tx;\n    }\n    async removeLiquidity(market, amount) {\n        const tx = await this.program.methods.removeLiquidity(new _coral_xyz_anchor__WEBPACK_IMPORTED_MODULE_0__.BN(amount)).accountsPartial({\n            liquidityProvider: this.provider.wallet.publicKey,\n            usdcMint: new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey(\"TTixtnUHcNPsQhDVZvBFDiUamVbz1kyM5QnbCmyFtP4\"),\n            market: market\n        }).rpc(CONFIRM_OPTIONS);\n        console.log(\"tx\", tx);\n        return tx;\n    }\n    async createATAs(market, user) {\n        const marketAccount = await this.program.account.market.fetch(market);\n        const yes_ix = await this.createTokenAccountInstruction(market, user, marketAccount.yesMint);\n        const no_ix = await this.createTokenAccountInstruction(market, user, marketAccount.noMint);\n        const lp_ix = await this.createTokenAccountInstruction(market, user, marketAccount.lpMint);\n        const ixs = [\n            yes_ix,\n            no_ix,\n            lp_ix\n        ];\n        // Filter out null instructions and match the return type\n        return ixs.filter((ix)=>ix !== null);\n    }\n    async getAtas(market) {\n        try {\n            const marketAccount = await this.program.account.market.fetch(market);\n            // Check if the required mint addresses exist\n            if (!marketAccount.yesMint || !marketAccount.noMint || !marketAccount.lpMint) {\n                throw new Error(\"Market mints not initialized\");\n            }\n            console.log(\"marketAccount\", marketAccount);\n            const usdcAta = (0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_3__.getAssociatedTokenAddressSync)(new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey(\"TTixtnUHcNPsQhDVZvBFDiUamVbz1kyM5QnbCmyFtP4\"), market, true);\n            console.log(\"usdcAta\", usdcAta.toBase58());\n            return usdcAta;\n        } catch (error) {\n            console.error(\"Error getting ATAs:\", error);\n            throw error;\n        }\n    }\n    async createTokenAccountInstruction(market, user, mint) {\n        const associatedToken = await (0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_3__.getAssociatedTokenAddressSync)(mint, user);\n        let account;\n        try {\n            account = await (0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_4__.getAccount)(this.provider.connection, associatedToken);\n            return null;\n        } catch (error) {\n            if (error instanceof _solana_spl_token__WEBPACK_IMPORTED_MODULE_5__.TokenAccountNotFoundError || error instanceof _solana_spl_token__WEBPACK_IMPORTED_MODULE_5__.TokenInvalidAccountOwnerError) {\n                try {\n                    const ix = (0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_6__.createAssociatedTokenAccountInstruction)(user, associatedToken, user, mint);\n                    return ix;\n                } catch (error) {\n                    throw error;\n                }\n            } else {\n                throw error;\n            }\n        }\n        return account;\n    }\n    async getMarkets() {\n        const markets = await this.program.account.market.all();\n        const markets_with_data = await Promise.all(markets.map((market)=>this.getMarket(market.publicKey)));\n        return markets_with_data.filter((market)=>market !== null);\n    }\n    async getPrice(market) {\n        const market_account = await this.program.account.market.fetch(market);\n        const market_yes_ata = await (0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_3__.getAssociatedTokenAddressSync)(market_account.yesMint, market, true);\n        const market_no_ata = await (0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_3__.getAssociatedTokenAddressSync)(market_account.noMint, market, true);\n        const yes_pool_balance = BigInt((await this.provider.connection.getTokenAccountBalance(market_yes_ata)).value.amount);\n        const no_pool_balance = BigInt((await this.provider.connection.getTokenAccountBalance(market_no_ata)).value.amount);\n        const prices = await this.calculateOutcomeShares(yes_pool_balance, no_pool_balance);\n        return prices;\n    }\n    async calculateOutcomeShares(yes_pool_balance, no_pool_balance) {\n        // Input validation\n        if (yes_pool_balance <= BigInt(0) || no_pool_balance <= BigInt(0)) {\n            if (yes_pool_balance == BigInt(0) && no_pool_balance == BigInt(0)) {\n                return {\n                    priceA: 0.5,\n                    priceB: 0.5,\n                    priceABigInt: BigInt(5000),\n                    priceBBigInt: BigInt(5000)\n                };\n            } else if (yes_pool_balance == BigInt(0)) {\n                return {\n                    priceA: 0,\n                    priceB: 1,\n                    priceABigInt: BigInt(0),\n                    priceBBigInt: BigInt(10000)\n                };\n            } else {\n                return {\n                    priceA: 1,\n                    priceB: 0,\n                    priceABigInt: BigInt(10000),\n                    priceBBigInt: BigInt(0)\n                };\n            }\n        }\n        const totalShares = yes_pool_balance + no_pool_balance;\n        const priceABigInt = no_pool_balance * this.PRECISION / totalShares;\n        const priceBBigInt = yes_pool_balance * this.PRECISION / totalShares;\n        const priceA = Number(priceABigInt) / Number(this.PRECISION);\n        const priceB = Number(priceBBigInt) / Number(this.PRECISION);\n        const sum = priceA + priceB;\n        if (Math.abs(sum - 1) > 0.0001) {\n            throw new Error(\"Invalid prices - must sum to 1\");\n        }\n        return {\n            priceA,\n            priceB,\n            priceABigInt,\n            priceBBigInt\n        };\n    }\n    async getUserTokenBalances(market, user) {\n        try {\n            const marketAccount = await this.program.account.market.fetch(market);\n            const yesAta = await (0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_3__.getAssociatedTokenAddressSync)(marketAccount.yesMint, user, true);\n            const noAta = await (0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_3__.getAssociatedTokenAddressSync)(marketAccount.noMint, user, true);\n            const lpAta = await (0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_3__.getAssociatedTokenAddressSync)(marketAccount.lpMint, user, true);\n            const [yesBalance, noBalance, lpBalance] = await Promise.all([\n                this.getTokenBalance(yesAta),\n                this.getTokenBalance(noAta),\n                this.getTokenBalance(lpAta)\n            ]);\n            return [\n                yesBalance,\n                noBalance,\n                lpBalance\n            ];\n        } catch (error) {\n            console.error(\"Error getting user token balances:\", error);\n            return [\n                0,\n                0,\n                0\n            ];\n        }\n    }\n    async getTokenBalance(ata) {\n        try {\n            const account = await (0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_4__.getAccount)(this.provider.connection, ata);\n            return Number(account.amount);\n        } catch (e) {\n            return 0;\n        }\n    }\n    async getMarket(marketPda) {\n        try {\n            console.log(\"marketPda\", marketPda.toBase58());\n            const market = await this.program.account.market.fetch(marketPda);\n            const description = JSON.parse(market.description);\n            console.log(\"description\", description);\n            const usdcAta = await this.getAtas(marketPda);\n            let usdcBalance;\n            try {\n                usdcBalance = await this.provider.connection.getTokenAccountBalance(usdcAta);\n            } catch (error) {\n                console.error(\"Error getting USDC balance:\", error);\n                usdcBalance = {\n                    value: {\n                        amount: \"0\"\n                    }\n                };\n            }\n            console.log(\"usdcBalance\", usdcBalance);\n            const prices = await this.getPrice(marketPda);\n            return {\n                creator: market.creator,\n                title: description.title,\n                desc: description.desc,\n                icon: description.icon,\n                publicKey: marketPda,\n                resolved: market.resolved,\n                outcome: market.outcome,\n                seed: Number(market.seed),\n                liquidity: Number(usdcBalance.value.amount),\n                yesAmount: prices.priceA,\n                noAmount: prices.priceB,\n                userYesBalance: 0,\n                userNoBalance: 0,\n                userLpBalance: 0\n            };\n        } catch (error) {\n            console.error(\"Error in getMarket:\", error);\n            return null;\n        }\n    }\n    async createPredictionTransaction(marketAddress, isYes, amount) {\n        try {\n            const transaction = await this.program.methods.buy(isYes, new _coral_xyz_anchor__WEBPACK_IMPORTED_MODULE_0__.BN(amount)).accountsPartial({\n                predictor: this.provider.wallet.publicKey,\n                usdcMint: new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey(\"TTixtnUHcNPsQhDVZvBFDiUamVbz1kyM5QnbCmyFtP4\"),\n                market: marketAddress\n            }).transaction();\n            return transaction;\n        } catch (error) {\n            console.error(\"Error creating prediction transaction:\", error);\n            throw error;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/utils/ProgramUtils.ts\n");

/***/ }),

/***/ "(rsc)/./src/app/solana/idl/fsee.json":
/*!**************************************!*\
  !*** ./src/app/solana/idl/fsee.json ***!
  \**************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"address":"6FFcK3e2KnkEe1bJF9NEY5QdY2cSP5yRifH8Rwz2mExE","metadata":{"name":"fsee","version":"0.1.0","spec":"0.1.0","description":"Created with Anchor"},"instructions":[{"name":"add_liquidity","discriminator":[181,157,89,67,143,182,52,72],"accounts":[{"name":"liquidity_provider","writable":true,"signer":true},{"name":"market","writable":true,"pda":{"seeds":[{"kind":"const","value":[109,97,114,107,101,116]},{"kind":"account","path":"market.creator","account":"Market"},{"kind":"account","path":"market.seed","account":"Market"}]}},{"name":"usdc_mint"},{"name":"usdc_vault","writable":true,"pda":{"seeds":[{"kind":"account","path":"market"},{"kind":"const","value":[6,221,246,225,215,101,161,147,217,203,225,70,206,235,121,172,28,180,133,237,95,91,55,145,58,140,245,133,126,255,0,169]},{"kind":"account","path":"usdc_mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"liquidity_provider_usdc","writable":true,"pda":{"seeds":[{"kind":"account","path":"liquidity_provider"},{"kind":"const","value":[6,221,246,225,215,101,161,147,217,203,225,70,206,235,121,172,28,180,133,237,95,91,55,145,58,140,245,133,126,255,0,169]},{"kind":"account","path":"usdc_mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"yes_mint","writable":true,"pda":{"seeds":[{"kind":"const","value":[121,101,115,95,109,105,110,116]},{"kind":"account","path":"market"}]}},{"name":"no_mint","writable":true,"pda":{"seeds":[{"kind":"const","value":[110,111,95,109,105,110,116]},{"kind":"account","path":"market"}]}},{"name":"lp_mint","writable":true,"pda":{"seeds":[{"kind":"const","value":[108,112,95,109,105,110,116]},{"kind":"account","path":"market"}]}},{"name":"lp_yes_position","writable":true,"pda":{"seeds":[{"kind":"account","path":"liquidity_provider"},{"kind":"const","value":[6,221,246,225,215,101,161,147,217,203,225,70,206,235,121,172,28,180,133,237,95,91,55,145,58,140,245,133,126,255,0,169]},{"kind":"account","path":"yes_mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"lp_no_position","writable":true,"pda":{"seeds":[{"kind":"account","path":"liquidity_provider"},{"kind":"const","value":[6,221,246,225,215,101,161,147,217,203,225,70,206,235,121,172,28,180,133,237,95,91,55,145,58,140,245,133,126,255,0,169]},{"kind":"account","path":"no_mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"yes_pool","writable":true,"pda":{"seeds":[{"kind":"account","path":"market"},{"kind":"const","value":[6,221,246,225,215,101,161,147,217,203,225,70,206,235,121,172,28,180,133,237,95,91,55,145,58,140,245,133,126,255,0,169]},{"kind":"account","path":"yes_mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"no_pool","writable":true,"pda":{"seeds":[{"kind":"account","path":"market"},{"kind":"const","value":[6,221,246,225,215,101,161,147,217,203,225,70,206,235,121,172,28,180,133,237,95,91,55,145,58,140,245,133,126,255,0,169]},{"kind":"account","path":"no_mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"liquidity_provider_lp_ata","writable":true,"pda":{"seeds":[{"kind":"account","path":"liquidity_provider"},{"kind":"const","value":[6,221,246,225,215,101,161,147,217,203,225,70,206,235,121,172,28,180,133,237,95,91,55,145,58,140,245,133,126,255,0,169]},{"kind":"account","path":"lp_mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"token_program","address":"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"},{"name":"system_program","address":"11111111111111111111111111111111"},{"name":"associated_token_program","address":"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL"}],"args":[{"name":"amount","type":"u64"}]},{"name":"buy","discriminator":[102,6,61,18,1,218,235,234],"accounts":[{"name":"predictor","writable":true,"signer":true},{"name":"market","writable":true,"pda":{"seeds":[{"kind":"const","value":[109,97,114,107,101,116]},{"kind":"account","path":"market.creator","account":"Market"},{"kind":"account","path":"market.seed","account":"Market"}]}},{"name":"usdc_mint"},{"name":"usdc_vault","writable":true,"pda":{"seeds":[{"kind":"account","path":"market"},{"kind":"const","value":[6,221,246,225,215,101,161,147,217,203,225,70,206,235,121,172,28,180,133,237,95,91,55,145,58,140,245,133,126,255,0,169]},{"kind":"account","path":"usdc_mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"predictor_usdc","writable":true,"pda":{"seeds":[{"kind":"account","path":"predictor"},{"kind":"const","value":[6,221,246,225,215,101,161,147,217,203,225,70,206,235,121,172,28,180,133,237,95,91,55,145,58,140,245,133,126,255,0,169]},{"kind":"account","path":"usdc_mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"yes_mint","writable":true,"pda":{"seeds":[{"kind":"const","value":[121,101,115,95,109,105,110,116]},{"kind":"account","path":"market"}]}},{"name":"no_mint","writable":true,"pda":{"seeds":[{"kind":"const","value":[110,111,95,109,105,110,116]},{"kind":"account","path":"market"}]}},{"name":"predictor_yes_ata","writable":true,"pda":{"seeds":[{"kind":"account","path":"predictor"},{"kind":"const","value":[6,221,246,225,215,101,161,147,217,203,225,70,206,235,121,172,28,180,133,237,95,91,55,145,58,140,245,133,126,255,0,169]},{"kind":"account","path":"yes_mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"predictor_no_ata","writable":true,"pda":{"seeds":[{"kind":"account","path":"predictor"},{"kind":"const","value":[6,221,246,225,215,101,161,147,217,203,225,70,206,235,121,172,28,180,133,237,95,91,55,145,58,140,245,133,126,255,0,169]},{"kind":"account","path":"no_mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"yes_pool","writable":true,"pda":{"seeds":[{"kind":"account","path":"market"},{"kind":"const","value":[6,221,246,225,215,101,161,147,217,203,225,70,206,235,121,172,28,180,133,237,95,91,55,145,58,140,245,133,126,255,0,169]},{"kind":"account","path":"yes_mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"no_pool","writable":true,"pda":{"seeds":[{"kind":"account","path":"market"},{"kind":"const","value":[6,221,246,225,215,101,161,147,217,203,225,70,206,235,121,172,28,180,133,237,95,91,55,145,58,140,245,133,126,255,0,169]},{"kind":"account","path":"no_mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"token_program","address":"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"},{"name":"system_program","address":"11111111111111111111111111111111"},{"name":"associated_token_program","address":"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL"}],"args":[{"name":"option","type":"bool"},{"name":"amount","type":"u64"}]},{"name":"initialize_market","discriminator":[35,35,189,193,155,48,170,203],"accounts":[{"name":"creator","writable":true,"signer":true},{"name":"market","writable":true,"pda":{"seeds":[{"kind":"const","value":[109,97,114,107,101,116]},{"kind":"account","path":"creator"},{"kind":"arg","path":"seed"}]}},{"name":"usdc_vault","writable":true,"pda":{"seeds":[{"kind":"account","path":"market"},{"kind":"const","value":[6,221,246,225,215,101,161,147,217,203,225,70,206,235,121,172,28,180,133,237,95,91,55,145,58,140,245,133,126,255,0,169]},{"kind":"account","path":"usdc_mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"usdc_mint"},{"name":"lp_mint","writable":true,"pda":{"seeds":[{"kind":"const","value":[108,112,95,109,105,110,116]},{"kind":"account","path":"market"}]}},{"name":"token_program","address":"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"},{"name":"system_program","address":"11111111111111111111111111111111"},{"name":"associated_token_program","address":"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL"}],"args":[{"name":"seed","type":"u64"},{"name":"description","type":"string"}]},{"name":"initialize_no_mints","discriminator":[63,240,223,97,247,145,209,164],"accounts":[{"name":"creator","writable":true,"signer":true},{"name":"market","writable":true,"pda":{"seeds":[{"kind":"const","value":[109,97,114,107,101,116]},{"kind":"account","path":"creator"},{"kind":"account","path":"market.seed","account":"Market"}]}},{"name":"no_mint","writable":true,"pda":{"seeds":[{"kind":"const","value":[110,111,95,109,105,110,116]},{"kind":"account","path":"market"}]}},{"name":"no_pool","writable":true,"pda":{"seeds":[{"kind":"account","path":"market"},{"kind":"const","value":[6,221,246,225,215,101,161,147,217,203,225,70,206,235,121,172,28,180,133,237,95,91,55,145,58,140,245,133,126,255,0,169]},{"kind":"account","path":"no_mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"token_program","address":"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"},{"name":"system_program","address":"11111111111111111111111111111111"},{"name":"associated_token_program","address":"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL"}],"args":[]},{"name":"initialize_yes_mints","discriminator":[204,151,189,232,136,161,179,81],"accounts":[{"name":"creator","writable":true,"signer":true},{"name":"market","writable":true,"pda":{"seeds":[{"kind":"const","value":[109,97,114,107,101,116]},{"kind":"account","path":"creator"},{"kind":"account","path":"market.seed","account":"Market"}]}},{"name":"yes_mint","writable":true,"pda":{"seeds":[{"kind":"const","value":[121,101,115,95,109,105,110,116]},{"kind":"account","path":"market"}]}},{"name":"yes_pool","writable":true,"pda":{"seeds":[{"kind":"account","path":"market"},{"kind":"const","value":[6,221,246,225,215,101,161,147,217,203,225,70,206,235,121,172,28,180,133,237,95,91,55,145,58,140,245,133,126,255,0,169]},{"kind":"account","path":"yes_mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"token_program","address":"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"},{"name":"system_program","address":"11111111111111111111111111111111"},{"name":"associated_token_program","address":"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL"}],"args":[]},{"name":"redeem_tokens","discriminator":[246,98,134,41,152,33,120,69],"accounts":[{"name":"predictor","writable":true,"signer":true},{"name":"market","writable":true,"pda":{"seeds":[{"kind":"const","value":[109,97,114,107,101,116]},{"kind":"account","path":"market.creator","account":"Market"},{"kind":"account","path":"market.seed","account":"Market"}]}},{"name":"usdc_mint"},{"name":"usdc_vault","writable":true,"pda":{"seeds":[{"kind":"account","path":"market"},{"kind":"const","value":[6,221,246,225,215,101,161,147,217,203,225,70,206,235,121,172,28,180,133,237,95,91,55,145,58,140,245,133,126,255,0,169]},{"kind":"account","path":"usdc_mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"predictor_usdc","writable":true,"pda":{"seeds":[{"kind":"account","path":"predictor"},{"kind":"const","value":[6,221,246,225,215,101,161,147,217,203,225,70,206,235,121,172,28,180,133,237,95,91,55,145,58,140,245,133,126,255,0,169]},{"kind":"account","path":"usdc_mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"yes_mint","writable":true,"pda":{"seeds":[{"kind":"const","value":[121,101,115,95,109,105,110,116]},{"kind":"account","path":"market"}]}},{"name":"no_mint","writable":true,"pda":{"seeds":[{"kind":"const","value":[110,111,95,109,105,110,116]},{"kind":"account","path":"market"}]}},{"name":"predictor_yes_ata","writable":true,"pda":{"seeds":[{"kind":"account","path":"predictor"},{"kind":"const","value":[6,221,246,225,215,101,161,147,217,203,225,70,206,235,121,172,28,180,133,237,95,91,55,145,58,140,245,133,126,255,0,169]},{"kind":"account","path":"yes_mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"predictor_no_ata","writable":true,"pda":{"seeds":[{"kind":"account","path":"predictor"},{"kind":"const","value":[6,221,246,225,215,101,161,147,217,203,225,70,206,235,121,172,28,180,133,237,95,91,55,145,58,140,245,133,126,255,0,169]},{"kind":"account","path":"no_mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"yes_pool","writable":true,"pda":{"seeds":[{"kind":"account","path":"market"},{"kind":"const","value":[6,221,246,225,215,101,161,147,217,203,225,70,206,235,121,172,28,180,133,237,95,91,55,145,58,140,245,133,126,255,0,169]},{"kind":"account","path":"yes_mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"no_pool","writable":true,"pda":{"seeds":[{"kind":"account","path":"market"},{"kind":"const","value":[6,221,246,225,215,101,161,147,217,203,225,70,206,235,121,172,28,180,133,237,95,91,55,145,58,140,245,133,126,255,0,169]},{"kind":"account","path":"no_mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"token_program","address":"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"},{"name":"system_program","address":"11111111111111111111111111111111"},{"name":"associated_token_program","address":"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL"}],"args":[{"name":"yes_tokens","type":"u64"},{"name":"no_tokens","type":"u64"}]},{"name":"remove_liquidity","discriminator":[80,85,209,72,24,206,177,108],"accounts":[{"name":"liquidity_provider","writable":true,"signer":true},{"name":"market","writable":true,"pda":{"seeds":[{"kind":"const","value":[109,97,114,107,101,116]},{"kind":"account","path":"market.creator","account":"Market"},{"kind":"account","path":"market.seed","account":"Market"}]}},{"name":"usdc_mint"},{"name":"usdc_vault","writable":true,"pda":{"seeds":[{"kind":"account","path":"market"},{"kind":"const","value":[6,221,246,225,215,101,161,147,217,203,225,70,206,235,121,172,28,180,133,237,95,91,55,145,58,140,245,133,126,255,0,169]},{"kind":"account","path":"usdc_mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"liquidity_provider_usdc","writable":true,"pda":{"seeds":[{"kind":"account","path":"liquidity_provider"},{"kind":"const","value":[6,221,246,225,215,101,161,147,217,203,225,70,206,235,121,172,28,180,133,237,95,91,55,145,58,140,245,133,126,255,0,169]},{"kind":"account","path":"usdc_mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"yes_mint","writable":true,"pda":{"seeds":[{"kind":"const","value":[121,101,115,95,109,105,110,116]},{"kind":"account","path":"market"}]}},{"name":"no_mint","writable":true,"pda":{"seeds":[{"kind":"const","value":[110,111,95,109,105,110,116]},{"kind":"account","path":"market"}]}},{"name":"lp_mint","writable":true,"pda":{"seeds":[{"kind":"const","value":[108,112,95,109,105,110,116]},{"kind":"account","path":"market"}]}},{"name":"lp_yes_position","writable":true,"pda":{"seeds":[{"kind":"account","path":"liquidity_provider"},{"kind":"const","value":[6,221,246,225,215,101,161,147,217,203,225,70,206,235,121,172,28,180,133,237,95,91,55,145,58,140,245,133,126,255,0,169]},{"kind":"account","path":"yes_mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"lp_no_position","writable":true,"pda":{"seeds":[{"kind":"account","path":"liquidity_provider"},{"kind":"const","value":[6,221,246,225,215,101,161,147,217,203,225,70,206,235,121,172,28,180,133,237,95,91,55,145,58,140,245,133,126,255,0,169]},{"kind":"account","path":"no_mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"yes_pool","writable":true,"pda":{"seeds":[{"kind":"account","path":"market"},{"kind":"const","value":[6,221,246,225,215,101,161,147,217,203,225,70,206,235,121,172,28,180,133,237,95,91,55,145,58,140,245,133,126,255,0,169]},{"kind":"account","path":"yes_mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"no_pool","writable":true,"pda":{"seeds":[{"kind":"account","path":"market"},{"kind":"const","value":[6,221,246,225,215,101,161,147,217,203,225,70,206,235,121,172,28,180,133,237,95,91,55,145,58,140,245,133,126,255,0,169]},{"kind":"account","path":"no_mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"liquidity_provider_lp_ata","writable":true,"pda":{"seeds":[{"kind":"account","path":"liquidity_provider"},{"kind":"const","value":[6,221,246,225,215,101,161,147,217,203,225,70,206,235,121,172,28,180,133,237,95,91,55,145,58,140,245,133,126,255,0,169]},{"kind":"account","path":"lp_mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"token_program","address":"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"},{"name":"system_program","address":"11111111111111111111111111111111"},{"name":"associated_token_program","address":"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL"}],"args":[{"name":"amount","type":"u64"}]},{"name":"resolve_market","discriminator":[155,23,80,173,46,74,23,239],"accounts":[{"name":"predictor","writable":true,"signer":true},{"name":"market","writable":true,"pda":{"seeds":[{"kind":"const","value":[109,97,114,107,101,116]},{"kind":"account","path":"market.creator","account":"Market"},{"kind":"account","path":"market.seed","account":"Market"}]}}],"args":[{"name":"outcome","type":"bool"}]}],"accounts":[{"name":"Market","discriminator":[219,190,213,55,0,227,198,154]}],"errors":[{"code":6000,"name":"MarketFrozen","msg":"Market is frozen"},{"code":6001,"name":"MarketResolved","msg":"Market is already resolved"},{"code":6002,"name":"InvalidAmount","msg":"Invalid amount"},{"code":6003,"name":"MathOverflow","msg":"Math overflow occurred"},{"code":6004,"name":"MarketNotResolved","msg":"Market is not resolved"},{"code":6005,"name":"MarketNotFrozen","msg":"Market is not frozen"},{"code":6006,"name":"MarketNotActive","msg":"Market is not active"},{"code":6007,"name":"InsufficientLiquidityShares","msg":"Insufficient liquidity shares"},{"code":6008,"name":"ArithmeticError","msg":"Arithmetic error"}],"types":[{"name":"Market","type":{"kind":"struct","fields":[{"name":"creator","type":"pubkey"},{"name":"seed","type":"u64"},{"name":"yes_mint","type":"pubkey"},{"name":"no_mint","type":"pubkey"},{"name":"lp_mint","type":"pubkey"},{"name":"description","type":"string"},{"name":"frozen","type":"bool"},{"name":"resolved","type":"bool"},{"name":"outcome","type":{"option":"bool"}},{"name":"total_liquidity_shares","type":"u64"},{"name":"fee_percentage","type":"u16"},{"name":"market_bump","type":"u8"},{"name":"yes_mint_bump","type":"u8"},{"name":"no_mint_bump","type":"u8"},{"name":"lp_mint_bump","type":"u8"}]}}]}');

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/@coral-xyz","vendor-chunks/@solana","vendor-chunks/@noble","vendor-chunks/uuid","vendor-chunks/rpc-websockets","vendor-chunks/next","vendor-chunks/whatwg-url","vendor-chunks/toml","vendor-chunks/borsh","vendor-chunks/utf-8-validate","vendor-chunks/tr46","vendor-chunks/node-gyp-build","vendor-chunks/jayson","vendor-chunks/eventemitter3","vendor-chunks/bufferutil","vendor-chunks/tslib","vendor-chunks/superstruct","vendor-chunks/pako","vendor-chunks/node-fetch","vendor-chunks/bignumber.js","vendor-chunks/webidl-conversions","vendor-chunks/tweetnacl","vendor-chunks/text-encoding-utf-8","vendor-chunks/snake-case","vendor-chunks/safe-buffer","vendor-chunks/no-case","vendor-chunks/lower-case","vendor-chunks/file-uri-to-path","vendor-chunks/dot-case","vendor-chunks/cross-fetch","vendor-chunks/camelcase","vendor-chunks/buffer-layout","vendor-chunks/bs58","vendor-chunks/bn.js","vendor-chunks/bindings","vendor-chunks/bigint-buffer","vendor-chunks/base-x"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fdonate%2Froute&page=%2Fapi%2Fdonate%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fdonate%2Froute.ts&appDir=%2FUsers%2Fsanthosh%2FDocuments%2FTurbin3%2Ff4see%2Fblinks%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsanthosh%2FDocuments%2FTurbin3%2Ff4see%2Fblinks&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();